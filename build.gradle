buildscript {
  ext {
    apacheCommonsLang3Version = "3.12.0"
    apacheCommonsTextVersion = "1.9"
    bootstrapVersion = "4.6.0-1"
    cacheApiVersion = "1.1.1"
    commonsCodecVersion = "1.15"
    datatablesVersion = "1.10.24"
    ehcacheVersion = "3.9.2"
    esapiVersion = "2.2.3.0"
    flywayVersion = "7.8.0"
    h2Version = "1.4.200"
    httpClientVersion = "4.5.13"
    mockitoVersion = "3.9.0"
    jacksonVersion = "2.12.3"
    jacocoVersion = "0.8.6"
    jaxbApiVersion = "2.3.1"
    jsonwebtokenVersion = "0.9.1"
    jsoupVersion = "1.13.1"
    junitVersion = "5.7.1"
    lombokVersion = "1.18.20"
    materialIconsVersion = "0.3.1"
    micrometerVersion = "1.6.6"
    modelmapperVersion = "2.4.0"
    postgresqlVersion = "42.2.19"
    restAssuredVersion = "4.2.1"
    servletApiVersion = "4.0.1"
    springBootVersion = "2.4.4"
    springSecurityVersion = "5.4.6"
    thymeleafDialectVersion = "2.5.2"
    thymeleafExtrasVersion = "3.0.4.RELEASE"
    webjarsLocatorVersion = "0.46"
  }
}

plugins {
  id "java-library"
  id "org.siouan.frontend-jdk11" version "5.0.1"
  id "org.springframework.boot" version "2.4.4"
  id "io.spring.dependency-management" version "1.0.11.RELEASE"
}

ext {
  dependencyVersions = ["org.junit.jupiter:junit-jupiter:$junitVersion",
                        "org.junit.jupiter:junit-jupiter-api:$junitVersion",
                        "org.slf4j:slf4j-api:1.7.30",
                        "org.mockito:mockito-core:$mockitoVersion",
                        "org.junit:junit-bom:$junitVersion",
                        "junit:junit:4.13.2",
                        "jakarta.xml.bind:jakarta.xml.bind-api:2.3.3",
                        "jakarta.activation:jakarta.activation-api:2.0.1",
                        "org.jboss.logging:jboss-logging:3.4.1.Final",
                        "net.bytebuddy:byte-buddy:1.10.22",
                        "org.javassist:javassist:3.27.0-GA",
                        "org.webjars:jquery:3.6.0",
                        "commons-io:commons-io:2.8.0"]
  dependencyGroupVersions = ["org.springframework"           : "5.3.5",
                             "org.springframework.security"  : springSecurityVersion,
                             "org.springframework.boot"      : springBootVersion,
                             "com.fasterxml.jackson.core"    : jacksonVersion,
                             "com.fasterxml.jackson.datatype": jacksonVersion,
                             "com.fasterxml.jackson.module"  : jacksonVersion]
}

ext['mockito.version'] = mockitoVersion
ext['jackson.version'] = jacksonVersion

allprojects {
  group = "rocks.metaldetector"

  repositories {
    mavenCentral()
  }

  configurations {
    all {
      resolutionStrategy {
        failOnVersionConflict()
        force dependencyVersions
        eachDependency { DependencyResolveDetails details ->
          def forcedVersion = dependencyGroupVersions[details.requested.group]
          if (forcedVersion) {
            details.useVersion forcedVersion
          }
        }
        cacheDynamicVersionsFor 0, "seconds"
      }
    }
  }
}

springBoot {
  mainClass.set('rocks.metaldetector.MetalDetectorApplication')
}

dependencies {
  developmentOnly "org.springframework.boot:spring-boot-devtools"
}

subprojects {
  apply plugin: "java-library"
  apply plugin: "io.spring.dependency-management"
  apply plugin: "jacoco"

  sourceCompatibility = JavaVersion.VERSION_11
  targetCompatibility = JavaVersion.VERSION_11

  tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
  }

  dependencies {
    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation "org.springframework.boot:spring-boot-starter-cache"
    implementation "org.springframework.boot:spring-boot-configuration-processor"

    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:$jacksonVersion"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jacksonVersion"
    implementation "org.projectlombok:lombok:$lombokVersion"

    annotationProcessor "org.projectlombok:lombok:$lombokVersion"

    testImplementation "org.springframework.boot:spring-boot-starter-test" exclude group: 'junit', module: 'junit'
    testImplementation "org.springframework.security:spring-security-test:$springSecurityVersion"
    testImplementation "org.junit.jupiter:junit-jupiter:$junitVersion"
    testImplementation "org.junit.vintage:junit-vintage-engine:$junitVersion"
    testImplementation "org.mockito:mockito-junit-jupiter:$mockitoVersion"
    testImplementation "com.h2database:h2:$h2Version"
  }

  dependencyManagement {
    dependencies {
      dependency "org.apache.commons:commons-text:$apacheCommonsTextVersion"
    }
  }

  test {
    useJUnitPlatform()
  }

  jacocoTestReport {
    reports {
      xml.enabled true
      html.enabled false
    }
  }

  wrapper {
    gradleVersion = "6.8.3"
    distributionType = Wrapper.DistributionType.ALL
  }
}

frontend {
  nodeDistributionProvided = false
  nodeVersion = "14.15.3"
  nodeDistributionUrlRoot = "https://nodejs.org/dist/"
  nodeDistributionUrlPathPattern = "vVERSION/node-vVERSION-ARCH.TYPE"
  nodeInstallDirectory = file("${projectDir}/node")

  installScript = "install"
  cleanScript = "run clean"
  assembleScript = "run assemble"
  checkScript = "run test"

  packageJsonDirectory = file("${projectDir}/webapp/src/main/resources/static/ts")
}
